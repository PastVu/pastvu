.mapModuleWrapper(data-bind="with: repository[M!M]")
    h4 Cluster size parameters
    p To set a new cluster size, grab a transparent rectangle on the map and move it or its borders to the extent necessary. To apply your changes, click Save.
    .mapContainer(data-bind="css: {}")
        .map
        .clusterContainer
            .clusterRect(data-bind="style: {borderColor: changed() ? '#FF0808' : '#2daf2e', borderStyle: changed() ? 'dashed' : 'solid'}")
        .layersPanel.fringe(data-bind="css: {open: layersOpen()}")
            .currentLayer(data-bind="text: layerActiveDesc(), click: toggleLayers")
            .layerSystems(data-bind="style: {width: (104 * (layersOpen() ? layers().length : 1)) + 'px'}")
                .h_separator
                //ko foreach: {data: $data.layers, as: 'system'}
                .layerSystem(data-bind="css: {selected: system.selected()}")
                    .layerHead(data-bind="text: system.desc")
                    //ko foreach: {data:system.types, as: 'type'}
                    .layerType(data-bind="css: {selected: type.selected()}, text: type.desc, click: function () {$parents[1].selectLayer(system.id, type.id)}")
                    // /ko
                // /ko
    dl.dl-horizontal
        dt(data-bind="text: 'Current sizes:'")
        dd(data-bind="text: '' + wCurr() + ' x ' + hCurr() + ''")
    dl.dl-horizontal(data-bind="style: {display: changed() ? '' : 'none'}")
        dt(data-bind="text: 'New sizes:'")
        dd(data-bind="text: '' + wNew() + ' x ' + hNew() + ''")
    .clusterButt(data-bind="style: {display: changed() ? '' : 'none'}")
        button.btn.btn-primary.btnSave(type="button", data-bind="css: {disabled: exe()}, click: save, attr: {disabled: exe()}")
            span.glyphicon.glyphicon-ok
            |  Save and start conversion
        button.btn.btn-warning.btnSave(type="button", data-bind="click: cancel")
            span.glyphicon.glyphicon-exclamation-sign
            |  Cancel
    button.btn.btn-primary.btnSave(type="button", data-bind="style: {display: changed() || isDefault() ? 'none' : ''}, click: setDefaults")
        | Reset to default
    p(style="margin-top: 6px; margin-bottom: 0;", data-bind="style: {display: exe() && changed() ? '' : 'none'}") The process of calculating the new parameters at different levels of zoom:
    .progress.progress-striped.active(data-bind="style: {display: exe() && changed() ? '' : 'none'}")
        .progress-bar.progress-bar-success(data-bind="style: {width: exePercent() + '%'}")
